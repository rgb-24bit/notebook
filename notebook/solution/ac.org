#+TITLE:      访问控制

* 目录                                                    :TOC_4_gh:noexport:
- [[#认证和授权][认证和授权]]
  - [[#常用的几种认证方式][常用的几种认证方式]]
  - [[#负载均衡下的状态同步][负载均衡下的状态同步]]
  - [[#oauth2][OAuth2]]
  - [[#jwt][JWT]]
- [[#sso][SSO]]
- [[#rbac][RBAC]]
- [[#iam][IAM]]

* 认证和授权
** 常用的几种认证方式
   + [[https://www.cnblogs.com/fengzheng/p/8416393.html][说一说几种常用的登录认证方式，你用的哪种 - 风的姿态 - 博客园]]
   + [[http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html][JSON Web Token 入门教程 - 阮一峰的网络日志]]
   + [[http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html][理解 OAuth 2.0 - 阮一峰的网络日志]]

** 负载均衡下的状态同步
   和业务相关的数据往往会直接保存到数据库，不同数据库之间可以通过主从的方式完成数据同步，但是对于认证数据来说，如果保存到数据库的话成本就太高了。

   因此，需要一些更为低成本且高效的同步方案，常见的就是：将状态写到 Memcached 或 Redis 里面去。

   使用 Nginx 的话也可以考虑使用 ip_hash 的方式让同一个客户端访问固定的后端服务器。

   参考：
   + [[https://www.cnblogs.com/zengguowang/p/8261695.html][Nginx:负载均衡的 session 共享 - ^小七 - 博客园]]

** OAuth2
   OAuth2 是现在常用的一种授权框架，可以参考：
   + [[https://www.cnblogs.com/XiongMaoMengNan/p/6785155.html][OAuth 2.0: Bearer Token Usage - 熊猫猛男 - 博客园]]
   + [[https://deepzz.com/post/what-is-oauth2-protocol.html][10 分钟理解什么是 OAuth 2.0 协议 | Deepzz's Blog]]
   + [[http://www.ruanyifeng.com/blog/2019/04/oauth_design.html][OAuth 2.0 的一个简单解释 - 阮一峰的网络日志]]
   + [[http://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html][OAuth 2.0 的四种方式 - 阮一峰的网络日志]]
   + [[http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html][理解 OAuth 2.0 - 阮一峰的网络日志]]

** JWT
   JWT 的出现大概是为了让服务端不在存储状态，但是，如果存在单点登录啊、需要 Token 过期之类的需求，使用 JWT 的意义也就不大了……
   + [[http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html][JSON Web Token 入门教程 - 阮一峰的网络日志]]

* SSO
  + [[https://apereo.github.io/cas/6.3.x/index.html][CAS - Home]]

* RBAC
  RBAC 是一种经典的权限系统设计方案，通过用户、角色和权限三个层次将用户和其权限之间解耦出来，便于管理和设计。

  可以参考：
  + [[https://en.wikipedia.org/wiki/Role-based_access_control][Role-based access control - Wikipedia]]

* IAM
  源自 AWS 的一种权限管理模型，基本上所有云厂商都会实现一套，可以参考：
  + [[https://aws.amazon.com/cn/iam/][AWS Identity and Access Management(IAM)_云中的访问权限管理-AWS云服务]]

